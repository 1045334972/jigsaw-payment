// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums.proto

package org.jigsaw.payment.model;

/**
 * <pre>
 **
 * 账户类型
 * </pre>
 *
 * Protobuf enum {@code AccountType}
 */
public enum AccountType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ACCOUNT_TYPE_UNKNOWN = 0;</code>
   */
  ACCOUNT_TYPE_UNKNOWN(0),
  /**
   * <pre>
   *对公
   * </pre>
   *
   * <code>FOR_COMPANY = 1;</code>
   */
  FOR_COMPANY(1),
  /**
   * <pre>
   *对私
   * </pre>
   *
   * <code>FOR_PERSONAL = 2;</code>
   */
  FOR_PERSONAL(2),
  /**
   * <pre>
   *内部
   * </pre>
   *
   * <code>FOR_INTERNAL = 3;</code>
   */
  FOR_INTERNAL(3),
  ;

  /**
   * <code>ACCOUNT_TYPE_UNKNOWN = 0;</code>
   */
  public static final int ACCOUNT_TYPE_UNKNOWN_VALUE = 0;
  /**
   * <pre>
   *对公
   * </pre>
   *
   * <code>FOR_COMPANY = 1;</code>
   */
  public static final int FOR_COMPANY_VALUE = 1;
  /**
   * <pre>
   *对私
   * </pre>
   *
   * <code>FOR_PERSONAL = 2;</code>
   */
  public static final int FOR_PERSONAL_VALUE = 2;
  /**
   * <pre>
   *内部
   * </pre>
   *
   * <code>FOR_INTERNAL = 3;</code>
   */
  public static final int FOR_INTERNAL_VALUE = 3;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static AccountType valueOf(int value) {
    return forNumber(value);
  }

  public static AccountType forNumber(int value) {
    switch (value) {
      case 0: return ACCOUNT_TYPE_UNKNOWN;
      case 1: return FOR_COMPANY;
      case 2: return FOR_PERSONAL;
      case 3: return FOR_INTERNAL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<AccountType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      AccountType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<AccountType>() {
          public AccountType findValueByNumber(int number) {
            return AccountType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.jigsaw.payment.model.Enums.getDescriptor().getEnumTypes().get(4);
  }

  private static final AccountType[] VALUES = values();

  public static AccountType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private AccountType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:AccountType)
}

