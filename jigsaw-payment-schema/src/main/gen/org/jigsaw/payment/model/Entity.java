// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity.proto

package org.jigsaw.payment.model;

public final class Entity {
  private Entity() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PayOrder_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PayOrder_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PayOrderFilter_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_PayOrderFilter_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Account_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Account_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014entity.proto\032\014taglib.proto\"\214\t\n\010PayOrde" +
      "r\022\n\n\002id\030\001 \001(\003\022\014\n\004code\030\013 \001(\t\022\033\n\013create_ti" +
      "me\030\002 \001(\003B\006\212\246\035\002\020\007\022\033\n\013update_time\030\003 \001(\003B\006\212" +
      "\246\035\002\020\007\022\033\n\013expire_time\030\004 \001(\003B\006\212\246\035\002\020\007\022\030\n\010pa" +
      "y_time\030\005 \001(\003B\006\212\246\035\002\020\007\022 \n\006status\030\006 \001(\0162\020.P" +
      "ayOrder.Status\022\017\n\007version\030\007 \001(\005\022\022\n\nerror" +
      "_code\030\010 \001(\t\022\024\n\014error_detail\030\t \001(\t\022\027\n\017sou" +
      "rce_pay_type\030\020 \001(\005\022\025\n\rdest_pay_type\030\021 \001(" +
      "\005\022\020\n\010pay_mode\030\' \001(\005\022\016\n\006app_id\0301 \001(\t\022\025\n\rp" +
      "ay_scenarios\0302 \001(\005\022\013\n\003fee\030\022 \001(\003\022\020\n\010fee_r",
      "eal\030\023 \001(\003\022\020\n\010fee_unit\030\024 \001(\005\022\030\n\020third_tra" +
      "de_code\030\014 \001(\t\022!\n\021third_create_time\030\r \001(\003" +
      "B\006\212\246\035\002\020\007\022\036\n\016third_pay_time\030\016 \001(\003B\006\212\246\035\002\020\007" +
      "\022\023\n\013current_key\030, \001(\003\022\022\n\nnotify_url\030/ \001(" +
      "\t\022\022\n\nreturn_url\0300 \001(\t\022\020\n\010order_id\030\025 \001(\t\022" +
      "\023\n\013order_title\030\026 \001(\t\022\024\n\014order_detail\030\027 \001" +
      "(\t\022\026\n\016order_show_url\030\030 \001(\t\022\016\n\006sub_id\030\031 \001" +
      "(\003\022\035\n\010sub_type\030\032 \001(\0162\013.EntityType\022\020\n\010sub" +
      "_name\030\033 \001(\t\022\026\n\016sub_account_id\030\034 \001(\t\022\030\n\020s" +
      "ub_account_type\030\035 \001(\005\022\016\n\006sub_ip\030\036 \001(\t\022\022\n",
      "\nsub_mobile\030\037 \001(\t\022\027\n\017sub_client_code\030  \001" +
      "(\t\022\025\n\rsub_device_id\030! \001(\t\022\021\n\tsub_email\030\"" +
      " \001(\t\022\024\n\014sub_location\030# \001(\t\022\030\n\020sub_countr" +
      "y_code\030$ \001(\t\022\022\n\npartner_id\030( \001(\003\022!\n\014part" +
      "ner_type\030) \001(\0162\013.EntityType\022\032\n\022partner_a" +
      "ccount_id\030* \001(\003\022\024\n\014partner_name\030+ \001(\t\"\233\001" +
      "\n\006Status\022\034\n\030UNKNOWN_PAY_ORDER_STATUS\020\000\022\010" +
      "\n\004PAID\020\001\022\n\n\006UNPAID\020\002\022\013\n\007PENDING\020\003\022\n\n\006CAN" +
      "CEL\020\004\022\014\n\010SMS_SUCC\020\005\022\n\n\006FROZEN\020\006\022\n\n\006CLOSE" +
      "D\020\007\022\r\n\tEXCEPTION\020\010\022\017\n\013CLOSE_PAYED\020\t\"\320\004\n\016",
      "PayOrderFilter\022 \n\006status\030\005 \001(\0162\020.PayOrde" +
      "r.Status\022\031\n\021create_time_begin\030\006 \001(\003\022\027\n\017c" +
      "reate_time_end\030\007 \001(\003\022\026\n\016pay_time_begin\030\010" +
      " \001(\003\022\024\n\014pay_time_end\030\t \001(\003\022\035\n\010sub_type\030\n" +
      " \001(\0162\013.EntityType\022\016\n\006sub_id\030\013 \001(\003\022\026\n\npar" +
      "tner_id\030\014 \003(\005B\002\020\001\022\036\n\022partner_account_id\030" +
      "\r \003(\005B\002\020\001\022\033\n\017source_pay_type\030\016 \003(\005B\002\020\001\022\031" +
      "\n\rdest_pay_type\030\017 \003(\005B\002\020\001\022\016\n\006app_id\030\020 \001(" +
      "\t\022\025\n\rpay_scenarios\030\021 \001(\005\022\017\n\007gateway\030\022 \001(" +
      "\005\022\020\n\010pay_mode\030\023 \001(\005\022\020\n\010order_id\030\024 \001(\t\022\031\n",
      "\021sub_mobile_status\030\025 \001(\005\022\026\n\016sub_account_" +
      "id\030\026 \001(\t\022\030\n\020sub_account_type\030\027 \001(\005\022\027\n\017su" +
      "b_client_code\030\030 \001(\t\022\021\n\tparent_id\030\032 \001(\003\022\022" +
      "\n\nsub_mobile\030\033 \001(\t\022\030\n\020third_trade_code\030\034" +
      " \001(\t\022\030\n\020partner_order_no\030\035 \001(\t\"\273\004\n\007Accou" +
      "nt\022\n\n\002id\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\003\022\033\n\004type\030" +
      "\003 \001(\0162\r.Account.Type\022\032\n\010fee_unit\030\004 \001(\0162\010" +
      ".FeeUnit\022\017\n\007balance\030\005 \001(\003\022\016\n\006frozen\030\006 \001(" +
      "\003\022\016\n\006income\030\007 \001(\003\022\017\n\007outcome\030\010 \001(\003\022\037\n\006st" +
      "atus\030\t \001(\0162\017.Account.Status\022\014\n\004rank\030\n \001(",
      "\005\022\016\n\006notice\030\013 \001(\005\022\014\n\004attr\030\014 \001(\003\022\026\n\016secur" +
      "ity_level\030\r \001(\005\022!\n\007sandbox\030\016 \001(\0162\020.Accou" +
      "nt.Sandbox\022\017\n\007version\030\017 \001(\t\022\033\n\013create_ti" +
      "me\030\020 \001(\003B\006\212\246\035\002\020\007\022\033\n\013update_time\030\021 \001(\003B\006\212" +
      "\246\035\002\020\007\022\022\n\nthird_type\030\022 \001(\005\022\025\n\rthird_accou" +
      "nt\030\023 \001(\t\022\023\n\013trird_param\030\024 \001(\t\"C\n\006Status\022" +
      "\017\n\013INITIALIZED\020\000\022\r\n\tACTIVATED\020\001\022\n\n\006FROZE" +
      "N\020\002\022\r\n\tDESTROYED\020\003\"$\n\004Type\022\017\n\013TYPE_WALLE" +
      "T\020\001\022\013\n\007TYPE_VC\020\002\"\032\n\007Sandbox\022\006\n\002NO\020\000\022\007\n\003Y" +
      "ES\020\001*\242\016\n\nStatusCode\022\013\n\007SUCCESS\020\000\022\013\n\007UNKN",
      "OWN\020\001\022\023\n\017BAD_DATA_FORMAT\020\002\022\025\n\021PERMISSION" +
      "_DENIED\020\003\022\022\n\016INTERNAL_ERROR\020\004\022\021\n\rDATA_RE" +
      "QUIRED\020\005\022\021\n\rLIMIT_REACHED\020\006\022\021\n\rQUOTA_REA" +
      "CHED\020\007\022\020\n\014INVALID_AUTH\020\010\022\020\n\014AUTH_EXPIRED" +
      "\020\t\022\021\n\rDATA_CONFLICT\020\n\022\023\n\017ENML_VALIDATION" +
      "\020\013\022\025\n\021SHARD_UNAVAILABLE\020\014\022\021\n\rLEN_TOO_SHO" +
      "RT\020\r\022\020\n\014LEN_TOO_LONG\020\016\022\013\n\007TOO_FEW\020\017\022\014\n\010T" +
      "OO_MANY\020\020\022\031\n\025UNSUPPORTED_OPERATION\020\021\022\016\n\n" +
      "TAKEN_DOWN\020\022\022\026\n\022RATE_LIMIT_REACHED\020\023\022$\n " +
      "BUSINESS_SECURITY_LOGIN_REQUIRED\020\024\022\030\n\024DE",
      "VICE_LIMIT_REACHED\020\025\022\036\n\032ERROR_COUPONS_FO" +
      "RMAT_INPUT\020e\022\025\n\021ERROR_COUPON_LOCK\020f\022\034\n\030E" +
      "RROR_COUPON_USE_EXPIRED\020g\022 \n\034ERROR_COUPO" +
      "N_USE_UNACTIVATED\020h\022\033\n\027ERROR_COUPON_USE_" +
      "FROZEN\020i\022\031\n\025ERROR_COUPON_USE_USED\020j\022\033\n\027E" +
      "RROR_COUPON_USE_LOCKED\020k\022\036\n\032ERROR_COUPON" +
      "_USE_DESTROYED\020l\022\035\n\031ERROR_COUPON_TYPE_CA" +
      "NT_OP\020m\022)\n%ERROR_COUPON_TYPE_CANT_DIRECT" +
      "_CONSUME\020n\022\036\n\032ERROR_COUPON_USE_UNSTARTED" +
      "\020o\022\033\n\027ERROR_ORDER_COUPON_NULL\020p\022#\n\037ERROR",
      "_ORDER_COUPON_NOT_ALL_LOCK\020q\022\034\n\030ERROR_CO" +
      "UPON_SEND_UNHAND\020r\022 \n\034ERROR_COUPON_SEND_" +
      "ACTIVATING\020s\022\037\n\033ERROR_COUPON_SEND_DESTRO" +
      "YED\020t\022\034\n\030ERROR_COUPON_SEND_LOCKED\020u\022\037\n\033E" +
      "RROR_COUPON_SEND_NO_ENOUGH\020v\022\"\n\036ERROR_CO" +
      "UPON_SEND_TIME_EXPIRED\020w\022\"\n\036ERROR_COUPON" +
      "_BATCH_UNAVAILABLE\020x\022$\n ERROR_ORDER_COUP" +
      "ON_NOT_ALL_VALID\020y\022\'\n#ERROR_COUPON_BATCH" +
      "_SEND_UNAVAILABLE\020z\022\033\n\027ERROR_COUPON_BIND" +
      "_LIMIT\020{\022\033\n\027ERROR_COUPON_BATCH_NULL\020|\022\025\n",
      "\021ERROR_COUPON_NULL\020}\022(\n$ERROR_COUPON_BIN" +
      "D_NOT_BELONG_PARTNER\020~\022\035\n\031ERROR_COUPON_B" +
      "IND_IS_SENT\020\177\022(\n#ERROR_COUPON_BIND_STATU" +
      "S_NOT_UNUSED\020\200\001\022\037\n\032ERROR_COUPON_CONSUME_" +
      "ERROR\020\201\001\022!\n\034ERROR_COUPON_BIND_OVER_LIMIT" +
      "\020\202\001\022\033\n\026ERROR_PASSWORD_NOT_SET\020\311\001\022\035\n\030ERRO" +
      "R_PASSWORD_SAVE_FAIL\020\312\001\022\033\n\026ERROR_PASSWOR" +
      "D_INVALID\020\313\001\022\032\n\025ERROR_PASSWORD_FROZEN\020\314\001" +
      "\022\031\n\024ERROR_IDCARD_INVALID\020\315\001\022\031\n\024ERROR_MOB" +
      "ILE_NOT_SET\020\316\001\022 \n\033ERROR_NAME_IDCARD_NOT_",
      "MATCH\020\317\001\022\031\n\024ERROR_ACCOUNT_FROZEN\020\320\001\022\033\n\026E" +
      "RROR_ACCOUNT_INACTIVE\020\321\001\022\031\n\024ERROR_PASSWO" +
      "RD_WRONG\020\322\001\022\036\n\031ERROR_ACCOUNT_UNAVAILABLE" +
      "\020\255\002\022%\n ERROR_ACCOUNT_BALANCE_NOT_ENOUGH\020" +
      "\256\002\022\035\n\030ERROR_ORDER_ALREADY_PAID\020\221\003*X\n\nEnt" +
      "ityType\022\027\n\023UNKNOWN_ENTITY_TYPE\020\000\022\010\n\004USER" +
      "\020\001\022\014\n\010MERCHANT\020\002\022\014\n\010CLEARING\020\003\022\013\n\007CHANNE" +
      "L\020\004*?\n\007FeeUnit\022\007\n\003CNY\020\001\022\007\n\003USD\020\002\022\007\n\003EUR\020" +
      "\003\022\007\n\003HKD\020\004\022\007\n\003TWD\020\005\022\007\n\003JPY\020\006B\034\n\030org.jigs" +
      "aw.payment.modelP\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.jigsaw.payment.model.Taglib.getDescriptor(),
        }, assigner);
    internal_static_PayOrder_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PayOrder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PayOrder_descriptor,
        new java.lang.String[] { "Id", "Code", "CreateTime", "UpdateTime", "ExpireTime", "PayTime", "Status", "Version", "ErrorCode", "ErrorDetail", "SourcePayType", "DestPayType", "PayMode", "AppId", "PayScenarios", "Fee", "FeeReal", "FeeUnit", "ThirdTradeCode", "ThirdCreateTime", "ThirdPayTime", "CurrentKey", "NotifyUrl", "ReturnUrl", "OrderId", "OrderTitle", "OrderDetail", "OrderShowUrl", "SubId", "SubType", "SubName", "SubAccountId", "SubAccountType", "SubIp", "SubMobile", "SubClientCode", "SubDeviceId", "SubEmail", "SubLocation", "SubCountryCode", "PartnerId", "PartnerType", "PartnerAccountId", "PartnerName", });
    internal_static_PayOrderFilter_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_PayOrderFilter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_PayOrderFilter_descriptor,
        new java.lang.String[] { "Status", "CreateTimeBegin", "CreateTimeEnd", "PayTimeBegin", "PayTimeEnd", "SubType", "SubId", "PartnerId", "PartnerAccountId", "SourcePayType", "DestPayType", "AppId", "PayScenarios", "Gateway", "PayMode", "OrderId", "SubMobileStatus", "SubAccountId", "SubAccountType", "SubClientCode", "ParentId", "SubMobile", "ThirdTradeCode", "PartnerOrderNo", });
    internal_static_Account_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Account_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Account_descriptor,
        new java.lang.String[] { "Id", "UserId", "Type", "FeeUnit", "Balance", "Frozen", "Income", "Outcome", "Status", "Rank", "Notice", "Attr", "SecurityLevel", "Sandbox", "Version", "CreateTime", "UpdateTime", "ThirdType", "ThirdAccount", "TrirdParam", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.jigsaw.payment.model.Taglib.columnOption);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.jigsaw.payment.model.Taglib.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
