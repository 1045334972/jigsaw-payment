syntax = "proto2";
option java_package = "org.jigsaw.payment.model";
option java_multiple_files = true;//指定生成多个类
import "taglib.proto";


/**
 * 状态码
**/
enum StatusCode {
    SUCCESS = 0;

	//通用错误
	  UNKNOWN = 1,
	  BAD_DATA_FORMAT = 2,
	  PERMISSION_DENIED = 3,
	  INTERNAL_ERROR = 4,
	  DATA_REQUIRED = 5,
	  LIMIT_REACHED = 6,
	  QUOTA_REACHED = 7,
	  INVALID_AUTH = 8,
	  AUTH_EXPIRED = 9,
	  DATA_CONFLICT = 10,
	  ENML_VALIDATION = 11,
	  SHARD_UNAVAILABLE = 12,
	  LEN_TOO_SHORT = 13,
	  LEN_TOO_LONG = 14,
	  TOO_FEW = 15,
	  TOO_MANY = 16,
	  UNSUPPORTED_OPERATION = 17,
	  TAKEN_DOWN = 18,
	  RATE_LIMIT_REACHED = 19,
	  BUSINESS_SECURITY_LOGIN_REQUIRED = 20,
	  DEVICE_LIMIT_REACHED = 21,

	//优惠券相关错误代码
    ERROR_COUPONS_FORMAT_INPUT = 101;
    ERROR_COUPON_LOCK = 102;
    ERROR_COUPON_USE_EXPIRED = 103;
    ERROR_COUPON_USE_UNACTIVATED = 104;
    ERROR_COUPON_USE_FROZEN = 105;
    ERROR_COUPON_USE_USED = 106;
    ERROR_COUPON_USE_LOCKED = 107;
    ERROR_COUPON_USE_DESTROYED = 108;
    ERROR_COUPON_TYPE_CANT_OP = 109;
    ERROR_COUPON_TYPE_CANT_DIRECT_CONSUME = 110;
    ERROR_COUPON_USE_UNSTARTED = 111;
    ERROR_ORDER_COUPON_NULL = 112;
    ERROR_ORDER_COUPON_NOT_ALL_LOCK = 113;
    ERROR_COUPON_SEND_UNHAND = 114;
    ERROR_COUPON_SEND_ACTIVATING = 115;
    ERROR_COUPON_SEND_DESTROYED = 116;
    ERROR_COUPON_SEND_LOCKED = 117;
    ERROR_COUPON_SEND_NO_ENOUGH = 118;
    ERROR_COUPON_SEND_TIME_EXPIRED = 119;
    ERROR_COUPON_BATCH_UNAVAILABLE = 120;
    ERROR_ORDER_COUPON_NOT_ALL_VALID = 121;
    ERROR_COUPON_BATCH_SEND_UNAVAILABLE = 122;
    ERROR_COUPON_BIND_LIMIT = 123;
    ERROR_COUPON_BATCH_NULL = 124;
    ERROR_COUPON_NULL = 125;
    ERROR_COUPON_BIND_NOT_BELONG_PARTNER = 126;
    ERROR_COUPON_BIND_IS_SENT = 127;
    ERROR_COUPON_BIND_STATUS_NOT_UNUSED = 128;
    ERROR_COUPON_CONSUME_ERROR = 129;
    ERROR_COUPON_BIND_OVER_LIMIT = 130;

	//安全相关的错误
    ERROR_PASSWORD_NOT_SET = 201;
    ERROR_PASSWORD_SAVE_FAIL = 202;
    ERROR_PASSWORD_INVALID = 203;
    ERROR_PASSWORD_FROZEN = 204;
    ERROR_IDCARD_INVALID = 205;
    ERROR_MOBILE_NOT_SET = 206;
    ERROR_NAME_IDCARD_NOT_MATCH = 207;
    ERROR_ACCOUNT_FROZEN = 208;
    ERROR_ACCOUNT_INACTIVE = 209;
    ERROR_PASSWORD_WRONG = 210;


	//账户相关的错误
    ERROR_ACCOUNT_UNAVAILABLE = 301;//账户不可用
    ERROR_ACCOUNT_BALANCE_NOT_ENOUGH = 302;//账户余额不足

	//订单相关的错误
    ERROR_ORDER_ALREADY_PAID=401;//订单已经支付成功


}

/**
 * 账户涉及到的实体
 *
**/
enum EntityType{
    UNKNOWN_ENTITY_TYPE = 0;
    USER = 1; //普通个人用户
    MERCHANT = 2; //商户
    CLEARING = 3; //结算户
    CHANNEL = 4; //渠道
}

/* 货币类型*/
enum FeeUnit {
	CNY = 1;
	USD = 2;
	EUR = 3;
	HKD = 4; 
	TWD = 5; 
	JPY = 6;
}
/**
 * 支付订单， 指业务方提交到支付平台的订单。 一个支付订单可以通过多个渠道订单来完成支付。
 *
**/
message PayOrder {
	enum Status{
    	UNKNOWN_PAY_ORDER_STATUS = 0;
	    PAID = 1;
	    UNPAID = 2;
	    PENDING = 3;
	    CANCEL = 4;
	    SMS_SUCC = 5;
	    FROZEN = 6;
	    CLOSED = 7;
	    EXCEPTION = 8;
	    CLOSE_PAYED = 9;
	}
    optional int64 id			= 1;  //id，主键
    optional string code		= 11; //支付订单号
    optional int64 create_time	= 2[(column_option).column_type = DATETIME];//创建时间，本条记录在服务器上创建的时间。
    optional int64 update_time	= 3[(column_option).column_type = DATETIME];//更新时间，本条记录最后修改时间；
    optional int64 expire_time	= 4[(column_option).column_type = DATETIME];//过期时间，由业务方设定的支付有效期。超过这个时间，支付即被判定为过期。在过期时间后不能在发起支付。如果在过期时间前支付已发起但是未完成，
    optional int64 pay_time		= 5[(column_option).column_type = DATETIME];//支付完成时间
    optional Status status = 6;//状态
    optional int32 version		= 7;//版本号
    optional string error_code	= 8;//错误码
    optional string error_detail= 9;//错误描述

	// 支付上下文信息
    optional int32 source_pay_type	= 16; //支付方式ID，用户选择的交易实体表的代码，与之前一致
	optional int32 dest_pay_type	= 17; //支付服务ID，经过路由实际执行的交易渠道表的代码，与之前一致
    optional int32 pay_mode			= 39;// 0:正常订单，1：测试订单
    optional string app_id			= 49;//发起交易的app id
    optional int32 pay_scenarios	= 50;//发起交易的场景，api，通用收银台，充值收银台，扫码支付
	
	//费用信息
    optional int64 fee		= 18;	//订单金额
    optional int64 fee_real = 19;	//实际支付金额
    optional int32 fee_unit = 20;	//订单计费单位

	//支付渠道信息；
    optional string third_trade_code	= 12; //第三方交易号
    optional int64	third_create_time	= 13 [(column_option).column_type = DATETIME];//第三方创建时间
    optional int64	third_pay_time		= 14 [(column_option).column_type = DATETIME];//第三方支付时间
    optional int64	current_key			= 44; //当前密钥ID
    
    optional string notify_url			= 47;//异步回调URL
    optional string return_url			= 48;//同步回调URL


	//商品订单信息
	optional string order_id		= 21;//商品订单号，由商户在请求支付的时候提交， 可以查询到商品信息。
    optional string order_title		= 22;//商品的名称
    optional string order_detail	= 23;//商品描述
    optional string order_show_url	= 24;//订单显示的url地址

	//交易主体信息；
    optional int64	sub_id			= 25;//主体ID：用户ID;也可以是商户ID
    optional EntityType sub_type	= 26;//主体类型
    optional string sub_name		= 27;//主体名称
    optional string sub_account_id	= 28;//主体帐号
    optional int32	sub_account_type = 29;//主体帐号类型：银行卡，奇点，奇豆，钱包,支付渠道
    optional string sub_ip			= 30;// 主体使用的IP
    optional string sub_mobile		= 31;//主体使用的手机号
    optional string sub_client_code = 32;//发起交易的客户端代码
    optional string sub_device_id	= 33;//交易主体实使用的设备号
    optional string sub_email		= 34;//交易主体的邮箱，预留
    optional string sub_location	= 35;//交易主体的地理位置，预留
    optional string sub_country_code = 36;//交易主体的国别，预留，默认为中国


	//交易对手信息
    optional int64 partner_id			= 40;//交易对手的ID，接入方系统ID
    optional EntityType partner_type	= 41;//交易对手的类型
    optional int64 partner_account_id	= 42;//交易对手的帐号,商户号ID
    optional string partner_name		= 43;//交易对手的名称

}

/**
 * 订单查询过滤器
**/
message PayOrderFilter {
   optional PayOrder.Status status = 5;

    optional int64 create_time_begin = 6;
    optional int64 create_time_end = 7;
    optional int64 pay_time_begin = 8;
    optional int64 pay_time_end = 9;

    optional EntityType sub_type = 10;
    optional int64 sub_id = 11;

    repeated int32 partner_id = 12[packed=true];
    repeated int32 partner_account_id = 13[packed=true];

    repeated int32 source_pay_type = 14[packed=true];
    repeated int32 dest_pay_type = 15[packed=true];

    optional string app_id = 16;
    optional int32 pay_scenarios = 17;
    optional int32 gateway = 18;
    optional int32 pay_mode = 19;
    optional string order_id = 20;

    optional int32 sub_mobile_status = 21;// for sms trade
    optional string sub_account_id = 22;
    optional int32 sub_account_type = 23;

    optional string sub_client_code = 24;

    optional int64 parent_id = 26;
    optional string sub_mobile = 27;
    optional string third_trade_code = 28;
    optional string partner_order_no = 29;

}





